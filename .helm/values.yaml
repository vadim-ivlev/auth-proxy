priorityclass:
  _default: "develop"
  stage: "staging"
  production: "production-medium"

app:
  port:
    _default: 4400
  resources:
    cpu:
      _default: "10m"
      production: "50m"
    memory:
      requests:
        _default: "16Mi"
        production: "32Mi"
      limits:
        _default: "16Mi"
        production: "32Mi"
  domain:
    _default: "api-{{ .Values.werf.env }}.k8s.rg.ru"
    production: apiauth.rg.ru
  proxy_body_size:
    _default: 2048m
  tls:
    _default: false
  secure:
    _default: true
  selfreg:
    production: true
    _default: false
  use_captcha:
    production: true
    _default: false
  use_pin:
    production: true
    _default: false
  max_attempts:
    _default: 5
  reset_time:
    _default: 60
  confirm_email_url:
    _default: "https://api-{{ .Values.werf.env }}.k8s.rg.ru/confirm-email/"
    production: "https://apiauth.rg.ru/confirm-email/"
  entry_point:
    _default: "https://editor-{{ .Values.werf.env }}.k8s.rg.ru/auth/login#email_success"
    production: "https://editor.rg.ru/auth/login#email_success"
  smtp_address:
    _default: mail4.rg.ru:25
  mail_from:
    _default: "noreply@rg.ru"
  admin_url:
    _default: "https://auth-admin.vercel.app/?url=https://api-{{ .Values.werf.env }}.k8s.rg.ru"
    production: "https://auth-admin.vercel.app/?url=https://apiauth.rg.ru"
  graphql_test_url:
    _default: "https://graphql-test.vercel.app/?end_point=https://api-{{ .Values.werf.env }}.k8s.rg.ru/schema&tab_name=auth-proxy4400"
    production: "https://graphql-test.vercel.app/?end_point=https://apiauth.rg.ru/schema&tab_name=auth-proxy4400"
replicas:
  app:
    hpa:
      min_replicas:
        _default: 2 
      max_replicas:
        _default: 3
      averageUtilization:
        _default: 80

infra:
    pg:
      host:
        _default: 'postgres-common.infra-{{ .Values.werf.env }}.svc.cluster.local'
        production: 'postgres-common-master.infra-{{ .Values.werf.env }}.svc.cluster.local'
      user:
        _default: 'rg-{{ .Values.werf.env }}'
      port:
        _default: 5432
      sslmode:
        _default: 'disable'
      database:
        _default: 'rg-{{ .Values.werf.env }}'
      searchpath:
        _default: 'auth,extensions'

tolerations:
  _default: []
  production:
    - effect: "NoSchedule"
      key: dedicated.flant.com
      operator: "Equal"
      value: "production"

nodeaffinity:
  _default: {}
  production:
   requiredDuringSchedulingIgnoredDuringExecution:
    nodeSelectorTerms:
    - matchExpressions:
      - key: node-role.kubernetes.io/production
        operator: Exists
