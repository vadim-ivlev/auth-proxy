version: '3.1'

services:



  # сервер, где запущено приложение
  auth-proxy-front:
    image: rgru/auth-proxy:latest
    container_name: auth-proxy-front
    volumes:
      - test_apps:/app/node-apps

    # command: bash -c "cd /app && ./auth -serve 4400 -env=front" 
    restart: always
    ports:
      - 4400:4400
    depends_on:
      - postgres
    links:
      - postgres


  # test applications
  auth-node:
    image: "node:alpine"
    container_name: auth-node
    restart: unless-stopped
    # потому что именно там лежат node-modules используемые здесь. 
    # TODO: отказаться от node реализации? Сделать отдельный имидж?
    depends_on:
      - auth-proxy-front
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
    volumes:
      - test_apps:/home/node/app
    command: "npm run start12"


  # база данных Postgres 
  postgres:
    image: postgres:10.9-alpine
    container_name: postgres
    restart: always
    # ports:
    #   - 5432:5432
    environment:
      POSTGRES_USER: pgadmin
      POSTGRES_PASSWORD: 159753
      POSTGRES_DB: rgru 
      PGDATA: /var/lib/postgresql/data/pgdata
  





volumes: 
  test_apps:

# внешняя сеть добавлена, чтобы можно было проксировать или обращаться к приложениям по именам служб,
# прописанных в файлах docker-compose.yml этих приложений, если конечно эти приложения так же 
# входят в подсеть auth_proxy_network.
#  В противном случае придётся прописывать IP адреса приложений, 
# что неудобно при переносе приложений или их перезапуске. 
networks:
  default:
    external:
      name: auth_proxy_network    